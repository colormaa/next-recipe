// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
// prisma/schema.prisma
// code above unchanged

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String?  @unique
  image     String?
  role      Role     @default(USER)
  bookmarks Link[]
  posts     Post[]
  comments  Comment[]
}

enum Role {
  USER
  ADMIN
}

model Link {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String
  description String
  url         String
  imageUrl    String
  category    String
  users       User[]
}
model Category{
  id          String @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String?  @unique
  description String
  parentId    String
  posts       Post[]
}
model Tag{
  id          String @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String?  @unique
  posts       Post[]
}
model Post{
  id          String @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String?  @unique
  slug        String?  @unique
  subText     String
  bodyText    String
  published  Boolean    @default(false)
  tags        Tag[]
  authorId    String
  author      User      @relation(fields: [authorId], references:[id])
  categoryId  String
  category    Category @relation(fields: [categoryId], references:[id])
  comments    Comment[]

}
model Comment {
  id      String @id @default(uuid())
  title   String
  content String
  userId  String  
  user    User @relation(fields: [userId], references: [id])
  postId  String
  post    Post    @relation(fields:[postId], references: [id])
}
model Product{
  id      String @id @default(uuid())
  name    String
}